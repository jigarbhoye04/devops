apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-profile-service-deployment
  namespace: helios
  labels:
    app: helios
    component: user-profile-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: helios
      component: user-profile-service
  template:
    metadata:
      labels:
        app: helios
        component: user-profile-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9200"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: user-profile-service
          image: ghcr.io/jigarbhoye04/helios/user-profile-service:latest
          ports:
            - containerPort: 50051
          env:
            - name: GRPC_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-profile-service-config
                  key: grpcPort
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-profile-service-config
                  key: redisHost
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-profile-service-config
                  key: redisPort
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-profile-service-secrets
                  key: redisPassword
          readinessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 10
            periodSeconds: 20
---
apiVersion: v1
kind: Secret
metadata:
  name: user-profile-service-secrets
  namespace: helios
  labels:
    app: helios
    component: user-profile-service
stringData:
  redisPassword: jigxKubServiceRedis
