apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-profile-service-deployment
  namespace: helios
  labels:
    app: helios
    component: user-profile-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: helios
      component: user-profile-service
  template:
    metadata:
      labels:
        app: helios
        component: user-profile-service
    spec:
      containers:
        - name: user-profile-service
          image: helios/user-profile-service:phase1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 50051
          env:
            - name: PROTO_PATH
              value: /app/proto/user_profile.proto
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-profile-service-config
                  key: redisHost
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-profile-service-config
                  key: redisPort
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - node dist/seed_redis.js || true
          readinessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 50051
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop: ["ALL"]
      securityContext:
        runAsNonRoot: true
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
---
