apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: helios
  labels:
    app: helios
    component: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.*)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.*)
            target_label: __address__
            replacement: $1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: helios
  labels:
    app: helios
    component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helios
      component: prometheus
  template:
    metadata:
      labels:
        app: helios
        component: prometheus
      annotations:
        prometheus.io/scrape: "false"
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.52.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
      volumes:
        - name: config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: helios
  labels:
    app: helios
    component: prometheus
spec:
  selector:
    app: helios
    component: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: helios
  labels:
    app: helios
    component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helios
      component: grafana
  template:
    metadata:
      labels:
        app: helios
        component: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.4.0
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: password
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin
  namespace: helios
  labels:
    app: helios
    component: grafana
stringData:
  password: change-me
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: helios
  labels:
    app: helios
    component: grafana
spec:
  type: ClusterIP
  selector:
    app: helios
    component: grafana
  ports:
    - port: 3000
      targetPort: 3000
